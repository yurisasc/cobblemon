package com.cablemc.pokemoncobbled.common.api.abilities

import com.cablemc.pokemoncobbled.common.pokemon.abilities.HiddenAbility

/**
 * Registry for all known Abilities
 */
object Abilities {
    private val allAbilities = mutableListOf<AbilityTemplate>()
    private val abilityMap = mutableMapOf<String, AbilityTemplate>()
    fun register(ability: AbilityTemplate): AbilityTemplate {
        abilityMap[ability.name.lowercase()] = ability
        allAbilities.add(ability)
        return ability
    }
    fun register(name: String) = register(AbilityTemplate(name))
    fun get(name: String) = abilityMap[name.lowercase()]
    fun getOrException(name: String) = get(name)!!
    fun count() = allAbilities.size

    fun loadPotentialAbilityInterpreters() {
        PotentialAbility.interpreters.add(CommonAbility.interpreter)
        PotentialAbility.interpreters.add(HiddenAbility.interpreter)
    }

    val ADAPTABILITY = register("adaptability")
    val AERILATE = register("aerilate")
    val AFTERMATH = register("aftermath")
    val AIR_LOCK = register("airlock")
    val ANALYTIC = register("analytic")
    val ANGER_POINT = register("angerpoint")
    val ANTICIPATION = register("anticipation")
    val ARENA_TRAP = register("arenatrap")
    val AROMA_VEIL = register("aromaveil")
    val AS_ONE = register("asone")
    val AURA_BREAK = register("aurabreak")
    val BAD_DREAMS = register("baddreams")
    val BALL_FETCH = register("ballfetch")
    val BATTERY = register("battery")
    val BATTLE_ARMOR = register("battlearmor")
    val BATTLE_BOND = register("battlebond")
    val BEAST_BOOST = register("beastboost")
    val BERSERK = register("berserk")
    val BIG_PECKS = register("bigpecks")
    val BLAZE = register("blaze")
    val BULLETPROOF = register("bulletproof")
    val CHEEK_POUCH = register("cheekpouch")
    val CHILLING_NEIGH = register("chillingneigh")
    val CHLOROPHYLL = register("chlorophyll")
    val CLEAR_BODY = register("clearbody")
    val CLOUD_NINE = register("cloudnine")
    val COLOR_CHANGE = register("colorchange")
    val COMATOSE = register("comatose")
    val COMPETITIVE = register("competitive")
    val COMPOUND_EYES = register("compoundeyes")
    val CONTRARY = register("contrary")
    val CORROSION = register("corrosion")
    val COTTON_DOWN = register("cottondown")
    val CURIOUS_MEDICINE = register("curiousmedicine")
    val CURSED_BODY = register("cursedbody")
    val CUTE_CHARM = register("cutecharm")
    val DAMP = register("damp")
    val DANCER = register("dancer")
    val DARK_AURA = register("darkaura")
    val DAUNTLESS_SHIELD = register("dauntlessshield")
    val DAZZLING = register("dazzling")
    val DEFEATIST = register("defeatist")
    val DEFIANT = register("defiant")
    val DELTA_STREAM = register("deltastream")
    val DESOLATE_LAND = register("desolateland")
    val DISGUISE = register("disguise")
    val DOWNLOAD = register("download")
    val DRAGONS_MAW = register("dragonsmaw")
    val DRIZZLE = register("drizzle")
    val DROUGHT = register("drought")
    val DRY_SKIN = register("dryskin")
    val EARLY_BIRD = register("earlybird")
    val EFFECT_SPORE = register("effectspore")
    val ELECTRIC_SURGE = register("electricsurge")
    val EMERGENCY_EXIT = register("emergencyexit")
    val FAIRY_AURA = register("fairyaura")
    val FILTER = register("filter")
    val FLAME_BODY = register("flamebody")
    val FLARE_BOOST = register("flareboost")
    val FLASH_FIRE = register("flashfire")
    val FLOWER_GIFT = register("flowergift")
    val FLOWER_VEIL = register("flowerveil")
    val FLUFFY = register("fluffy")
    val FORECAST = register("forecast")
    val FOREWARN = register("forewarn")
    val FRIEND_GUARD = register("friendguard")
    val FRISK = register("frisk")
    val FULL_METAL_BODY = register("fullmetalbody")
    val FUR_COAT = register("furcoat")
    val GALE_WINGS = register("galewings")
    val GALVANIZE = register("galvanize")
    val GLUTTONY = register("gluttony")
    val GOOEY = register("gooey")
    val GORILLA_TACTICS = register("gorillatactics")
    val GRASS_PELT = register("grasspelt")
    val GRASSY_SURGE = register("grassysurge")
    val GRIM_NEIGH = register("grimneigh")
    val GULP_MISSILE = register("gulpmissile")
    val GUTS = register("guts")
    val HARVEST = register("harvest")
    val HEALER = register("healer")
    val HEATPROOF = register("heatproof")
    val HEAVY_METAL = register("heavymetal")
    val HONEY_GATHER = register("honeygather")
    val HUGE_POWER = register("hugepower")
    val HUNGER_SWITCH = register("hungerswitch")
    val HUSTLE = register("hustle")
    val HYDRATION = register("hydration")
    val HYPER_CUTTER = register("hypercutter")
    val ICE_BODY = register("icebody")
    val ICE_FACE = register("iceface")
    val ICE_SCALES = register("icescales")
    val ILLUMINATE = register("illuminate")
    val ILLUSION = register("illusion")
    val IMMUNITY = register("immunity")
    val IMPOSTER = register("imposter")
    val INFILTRATOR = register("infiltrator")
    val INNARDS_OUT = register("innardsout")
    val INNER_FOCUS = register("innerfocus")
    val INSOMNIA = register("insomnia")
    val INTIMIDATE = register("intimidate")
    val INTREPID_SWORD = register("intrepidsword")
    val IRON_BARBS = register("ironbarbs")
    val IRON_FIST = register("ironfist")
    val JUSTIFIED = register("justified")
    val KEEN_EYE = register("keeneye")
    val KLUTZ = register("klutz")
    val LEAF_GUARD = register("leafguard")
    val LEVITATE = register("levitate")
    val LIBERO = register("libero")
    val LIGHT_METAL = register("lightmetal")
    val LIGHTNING_ROD = register("lightningrod")
    val LIMBER = register("limber")
    val LIQUID_OOZE = register("liquidooze")
    val LIQUID_VOICE = register("liquidvoice")
    val LONG_REACH = register("longreach")
    val MAGIC_BOUNCE = register("magicbounce")
    val MAGIC_GUARD = register("magicguard")
    val MAGICIAN = register("magician")
    val MAGMA_ARMOR = register("magmaarmor")
    val MAGNET_PULL = register("magnetpull")
    val MARVEL_SCALE = register("marvelscale")
    val MEGA_LAUNCHER = register("megalauncher")
    val MERCILESS = register("merciless")
    val MIMICRY = register("mimicry")
    val MINUS = register("minus")
    val MIRROR_ARMOR = register("mirrorarmor")
    val MISTY_SURGE = register("mistysurge")
    val MOLD_BREAKER = register("moldbreaker")
    val MOODY = register("moody")
    val MOTOR_DRIVE = register("motordrive")
    val MOXIE = register("moxie")
    val MULTISCALE = register("multiscale")
    val MULTITYPE = register("multitype")
    val MUMMY = register("mummy")
    val NATURAL_CURE = register("naturalcure")
    val NEUROFORCE = register("neuroforce")
    val NEUTRALIZING_GAS = register("neutralizinggas")
    val NO_GUARD = register("noguard")
    val NORMALIZE = register("normalize")
    val OBLIVIOUS = register("oblivious")
    val OVERCOAT = register("overcoat")
    val OVERGROW = register("overgrow")
    val OWN_TEMPO = register("owntempo")
    val PARENTAL_BOND = register("parentalbond")
    val PASTEL_VEIL = register("pastelveil")
    val PERISH_BODY = register("perishbody")
    val PICKPOCKET = register("pickpocket")
    val PICKUP = register("pickup")
    val PIXILATE = register("pixilate")
    val PLUS = register("plus")
    val POISON_HEAL = register("poisonheal")
    val POISON_POINT = register("poisonpoint")
    val POISON_TOUCH = register("poisontouch")
    val POWER_CONSTRUCT = register("powerconstruct")
    val POWER_OF_ALCHEMY = register("powerofalchemy")
    val POWER_SPOT = register("powerspot")
    val PRANKSTER = register("prankster")
    val PRESSURE = register("pressure")
    val PRIMORDIAL_SEA = register("primordialsea")
    val PRISM_ARMOR = register("prismarmor")
    val PROPELLER_TAIL = register("propellertail")
    val PROTEAN = register("protean")
    val PSYCHIC_SURGE = register("psychicsurge")
    val PUNK_ROCK = register("punkrock")
    val PURE_POWER = register("purepower")
    val QUEENLY_MAJESTY = register("queenlymajesty")
    val QUICK_DRAW = register("quickdraw")
    val QUICK_FEET = register("quickfeet")
    val RAIN_DISH = register("raindish")
    val RATTLED = register("rattled")
    val RECEIVER = register("receiver")
    val RECKLESS = register("reckless")
    val REFRIGERATE = register("refrigerate")
    val REGENERATOR = register("regenerator")
    val RIPEN = register("ripen")
    val RIVALRY = register("rivalry")
    val RKS_SYSTEM = register("rkssystem")
    val ROCK_HEAD = register("rockhead")
    val ROUGH_SKIN = register("roughskin")
    val RUN_AWAY = register("runaway")
    val SAND_FORCE = register("sandforce")
    val SAND_RUSH = register("sandrush")
    val SAND_SPIT = register("sandspit")
    val SAND_STREAM = register("sandstream")
    val SAND_VEIL = register("sandveil")
    val SAP_SIPPER = register("sapsipper")
    val SCHOOLING = register("schooling")
    val SCRAPPY = register("scrappy")
    val SCREEN_CLEANER = register("screencleaner")
    val SERENE_GRACE = register("serenegrace")
    val SHADOW_SHIELD = register("shadowshield")
    val SHADOW_TAG = register("shadowtag")
    val SHED_SKIN = register("shedskin")
    val SHEER_FORCE = register("sheerforce")
    val SHELL_ARMOR = register("shellarmor")
    val SHIELD_DUST = register("shielddust")
    val SHIELDS_DOWN = register("shieldsdown")
    val SIMPLE = register("simple")
    val SKILL_LINK = register("skilllink")
    val SLOW_START = register("slowstart")
    val SLUSH_RUSH = register("slushrush")
    val SNIPER = register("sniper")
    val SNOW_CLOAK = register("snowcloak")
    val SNOW_WARNING = register("snowwarning")
    val SOLAR_POWER = register("solarpower")
    val SOLID_ROCK = register("solidrock")
    val SOUL_HEART = register("soulheart")
    val SOUNDPROOF = register("soundproof")
    val SPEED_BOOST = register("speedboost")
    val STAKEOUT = register("stakeout")
    val STALL = register("stall")
    val STALWART = register("stalwart")
    val STAMINA = register("stamina")
    val STANCE_CHANGE = register("stancechange")
    val STATIC = register("static")
    val STEADFAST = register("steadfast")
    val STEAM_ENGINE = register("steamengine")
    val STEELWORKER = register("steelworker")
    val STEELY_SPIRIT = register("steelyspirit")
    val STENCH = register("stench")
    val STICKY_HOLD = register("stickyhold")
    val STORM_DRAIN = register("stormdrain")
    val STRONG_JAW = register("strongjaw")
    val STURDY = register("sturdy")
    val SUCTION_CUPS = register("suctioncups")
    val SUPER_LUCK = register("superluck")
    val SURGE_SURFER = register("surgesurfer")
    val SWARM = register("swarm")
    val SWEET_VEIL = register("sweetveil")
    val SWIFT_SWIM = register("swiftswim")
    val SYMBIOSIS = register("symbiosis")
    val SYNCHRONIZE = register("synchronize")
    val TANGLED_FEET = register("tangledfeet")
    val TANGLING_HAIR = register("tanglinghair")
    val TECHNICIAN = register("technician")
    val TELEPATHY = register("telepathy")
    val TERAVOLT = register("teravolt")
    val THICK_FAT = register("thickfat")
    val TINTED_LENS = register("tintedlens")
    val TORRENT = register("torrent")
    val TOUGH_CLAWS = register("toughclaws")
    val TOXIC_BOOST = register("toxicboost")
    val TRACE = register("trace")
    val TRANSISTOR = register("transistor")
    val TRIAGE = register("triage")
    val TRUANT = register("truant")
    val TURBOBLAZE = register("turboblaze")
    val UNAWARE = register("unaware")
    val UNBURDEN = register("unburden")
    val UNNERVE = register("unnerve")
    val UNSEEN_FIST = register("unseenfist")
    val VICTORY_STAR_ = register("victorystar")
    val VITAL_SPIRIT = register("vitalspirit")
    val VOLT_ABSORB = register("voltabsorb")
    val WANDERING_SPIRIT = register("wanderingspirit")
    val WATER_ABSORB = register("waterabsorb")
    val WATER_BUBBLE = register("waterbubble")
    val WATER_COMPACTION = register("watercompaction")
    val WATER_VEIL = register("waterveil")
    val WEAK_ARMOR = register("weakarmor")
    val WHITE_SMOKE = register("whitesmoke")
    val WIMP_OUT = register("wimpout")
    val WONDER_GUARD = register("wonderguard")
    val WONDER_SKIN = register("wonderskin")
    val ZEN_MODE = register("zenmode")
}